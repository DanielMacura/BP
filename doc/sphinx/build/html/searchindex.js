Search.setIndex({"alltitles": {"Contents:": [[1, null]], "Grammar": [[0, null]], "LL Table": [[3, null]], "LUMEX documentation": [[1, null]], "Lexer": [[2, null]], "Symbol": [[4, null]], "Tokens": [[5, null]]}, "docnames": ["grammar", "index", "lexer", "lltable", "symbol", "tokens"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["grammar.rst", "index.rst", "lexer.rst", "lltable.rst", "symbol.rst", "tokens.rst"], "indexentries": {"__init__() (grammar.grammar method)": [[0, "grammar.Grammar.__init__", false]], "__init__() (grammar.production method)": [[0, "grammar.Production.__init__", false]], "__init__() (lex.lexer method)": [[2, "lex.Lexer.__init__", false]], "__init__() (lltable.lltable method)": [[3, "lltable.LLTable.__init__", false]], "__init__() (symbol.nonterminal method)": [[4, "symbol.NonTerminal.__init__", false]], "__init__() (symbol.symbol method)": [[4, "symbol.Symbol.__init__", false]], "__init__() (tokens.literal method)": [[5, "tokens.Literal.__init__", false]], "__init__() (tokens.token method)": [[5, "tokens.Token.__init__", false]], "advance() (lex.lexer method)": [[2, "lex.Lexer.advance", false]], "comma (class in tokens)": [[5, "tokens.Comma", false]], "comment (class in tokens)": [[5, "tokens.Comment", false]], "computefirstsets() (lltable.lltable method)": [[3, "lltable.LLTable.ComputeFirstSets", false]], "computefolowsets() (lltable.lltable method)": [[3, "lltable.LLTable.ComputeFolowSets", false]], "computeselectsets() (lltable.lltable method)": [[3, "lltable.LLTable.ComputeSelectSets", false]], "computetable() (lltable.lltable method)": [[3, "lltable.LLTable.ComputeTable", false]], "divide (class in tokens)": [[5, "tokens.Divide", false]], "doubleequal (class in tokens)": [[5, "tokens.DoubleEqual", false]], "else (class in tokens)": [[5, "tokens.Else", false]], "eof (class in tokens)": [[5, "tokens.EOF", false]], "epsilon (class in symbol)": [[4, "symbol.Epsilon", false]], "equal (class in tokens)": [[5, "tokens.Equal", false]], "firstclosure() (lltable.lltable method)": [[3, "lltable.LLTable.FirstClosure", false]], "float (class in tokens)": [[5, "tokens.Float", false]], "followclosure() (lltable.lltable method)": [[3, "lltable.LLTable.FollowClosure", false]], "for (class in tokens)": [[5, "tokens.For", false]], "function (class in tokens)": [[5, "tokens.Function", false]], "grammar": [[0, "module-grammar", false]], "grammar (class in grammar)": [[0, "grammar.Grammar", false]], "gt (class in tokens)": [[5, "tokens.GT", false]], "gte (class in tokens)": [[5, "tokens.GTE", false]], "identifier (class in tokens)": [[5, "tokens.Identifier", false]], "if (class in tokens)": [[5, "tokens.If", false]], "integer (class in tokens)": [[5, "tokens.Integer", false]], "leftbracket (class in tokens)": [[5, "tokens.LeftBracket", false]], "leftcurly (class in tokens)": [[5, "tokens.LeftCurly", false]], "lexer (class in lex)": [[2, "lex.Lexer", false]], "literal (class in tokens)": [[5, "tokens.Literal", false]], "lltable (class in lltable)": [[3, "lltable.LLTable", false]], "lt (class in tokens)": [[5, "tokens.LT", false]], "lte (class in tokens)": [[5, "tokens.LTE", false]], "minus (class in tokens)": [[5, "tokens.Minus", false]], "module": [[0, "module-grammar", false], [4, "module-symbol", false], [5, "module-tokens", false]], "multiply (class in tokens)": [[5, "tokens.Multiply", false]], "newline (class in tokens)": [[5, "tokens.NewLine", false]], "nonterminal (class in symbol)": [[4, "symbol.NonTerminal", false]], "nonterminals() (grammar.grammar method)": [[0, "grammar.Grammar.nonTerminals", false]], "notequal (class in tokens)": [[5, "tokens.NotEqual", false]], "plus (class in tokens)": [[5, "tokens.Plus", false]], "predict() (lltable.lltable method)": [[3, "lltable.LLTable.Predict", false]], "production (class in grammar)": [[0, "grammar.Production", false]], "questionmark (class in tokens)": [[5, "tokens.Questionmark", false]], "rightbracket (class in tokens)": [[5, "tokens.RightBracket", false]], "rightcurly (class in tokens)": [[5, "tokens.RightCurly", false]], "semicolon (class in tokens)": [[5, "tokens.Semicolon", false]], "space (class in tokens)": [[5, "tokens.Space", false]], "string (class in tokens)": [[5, "tokens.String", false]], "symbol": [[4, "module-symbol", false]], "symbol (class in symbol)": [[4, "symbol.Symbol", false]], "terminal (class in symbol)": [[4, "symbol.Terminal", false]], "terminals() (grammar.grammar method)": [[0, "grammar.Grammar.terminals", false]], "token (class in tokens)": [[5, "tokens.Token", false]], "tokens": [[5, "module-tokens", false]], "tokens() (lex.lexer method)": [[2, "lex.Lexer.tokens", false]], "variable (class in tokens)": [[5, "tokens.Variable", false]]}, "objects": {"": [[0, 0, 0, "-", "grammar"], [4, 0, 0, "-", "symbol"], [5, 0, 0, "-", "tokens"]], "grammar": [[0, 1, 1, "", "Grammar"], [0, 1, 1, "", "Production"]], "grammar.Grammar": [[0, 2, 1, "", "__init__"], [0, 2, 1, "", "nonTerminals"], [0, 2, 1, "", "terminals"]], "grammar.Production": [[0, 2, 1, "", "__init__"]], "lex": [[2, 1, 1, "", "Lexer"]], "lex.Lexer": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "advance"], [2, 2, 1, "", "tokens"]], "lltable": [[3, 1, 1, "", "LLTable"]], "lltable.LLTable": [[3, 2, 1, "", "ComputeFirstSets"], [3, 2, 1, "", "ComputeFolowSets"], [3, 2, 1, "", "ComputeSelectSets"], [3, 2, 1, "", "ComputeTable"], [3, 2, 1, "", "FirstClosure"], [3, 2, 1, "", "FollowClosure"], [3, 2, 1, "", "Predict"], [3, 2, 1, "", "__init__"]], "symbol": [[4, 1, 1, "", "Epsilon"], [4, 1, 1, "", "NonTerminal"], [4, 1, 1, "", "Symbol"], [4, 1, 1, "", "Terminal"]], "symbol.NonTerminal": [[4, 2, 1, "", "__init__"]], "symbol.Symbol": [[4, 2, 1, "", "__init__"]], "tokens": [[5, 1, 1, "", "Comma"], [5, 1, 1, "", "Comment"], [5, 1, 1, "", "Divide"], [5, 1, 1, "", "DoubleEqual"], [5, 1, 1, "", "EOF"], [5, 1, 1, "", "Else"], [5, 1, 1, "", "Equal"], [5, 1, 1, "", "Float"], [5, 1, 1, "", "For"], [5, 1, 1, "", "Function"], [5, 1, 1, "", "GT"], [5, 1, 1, "", "GTE"], [5, 1, 1, "", "Identifier"], [5, 1, 1, "", "If"], [5, 1, 1, "", "Integer"], [5, 1, 1, "", "LT"], [5, 1, 1, "", "LTE"], [5, 1, 1, "", "LeftBracket"], [5, 1, 1, "", "LeftCurly"], [5, 1, 1, "", "Literal"], [5, 1, 1, "", "Minus"], [5, 1, 1, "", "Multiply"], [5, 1, 1, "", "NewLine"], [5, 1, 1, "", "NotEqual"], [5, 1, 1, "", "Plus"], [5, 1, 1, "", "Questionmark"], [5, 1, 1, "", "RightBracket"], [5, 1, 1, "", "RightCurly"], [5, 1, 1, "", "Semicolon"], [5, 1, 1, "", "Space"], [5, 1, 1, "", "String"], [5, 1, 1, "", "Token"], [5, 1, 1, "", "Variable"]], "tokens.Literal": [[5, 2, 1, "", "__init__"]], "tokens.Token": [[5, 2, 1, "", "__init__"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method"}, "terms": {"": [2, 3, 5], "0": 3, "1": 3, "A": [2, 3, 5], "For": [1, 5], "If": [1, 3, 5], "It": 0, "The": [0, 2, 3], "To": 3, "__init__": [0, 2, 3, 4, 5], "ad": [0, 3], "add": 1, "advanc": 2, "after": 3, "all": [0, 2, 3], "allow": 0, "alpha": 3, "alreadi": 2, "also": 5, "an": 3, "ani": [0, 3], "aplic": 3, "appli": [0, 3], "ar": [0, 2, 3, 5], "assign": 2, "b": [0, 3], "begin": 3, "belong": 2, "beta": 3, "bool": 0, "c": 0, "call": [2, 3], "can": [0, 3], "chang": 3, "check": 0, "class": [0, 2, 3, 4, 5], "closur": 3, "code": [2, 5], "comma": [1, 5], "comment": [1, 5], "comput": 3, "computefirstset": 3, "computefollowset": 3, "computefolowset": 3, "computeselectset": 3, "computet": 3, "consist": 0, "construct": 3, "constructor": 3, "convert": 2, "current": 3, "currentst": 3, "cursor": 2, "d": 0, "defin": [0, 2], "depend": 3, "detail": 1, "divid": [1, 5], "don": 3, "dot": 3, "doubleequ": [1, 5], "e": 0, "each": 3, "either": 3, "els": [1, 5], "eof": [1, 5], "epsilon": [0, 1, 3, 4], "equal": [1, 5], "even": 0, "everi": 3, "fals": 0, "first": 3, "firstclosur": 3, "firstset": 3, "float": [1, 5], "follow": [0, 3], "followclosur": 3, "follw": 3, "form": 3, "found": [3, 5], "from": [2, 3, 5], "function": [1, 5], "gener": [2, 3, 5], "given": 3, "go": 3, "grammar": [1, 2, 3], "gt": [1, 5], "gte": [1, 5], "guid": 3, "hand": 0, "i": [0, 2, 3], "identifi": [1, 5], "implement": 5, "includ": 3, "increment_numb": 0, "individu": 2, "input": [2, 3], "integ": [1, 5], "invalid": 3, "left": 0, "leftbracket": [1, 5], "leftcurli": [1, 5], "lex": 2, "lexem": [2, 5], "lexeme_pattern": 5, "lexer": 1, "lh": [0, 3], "line": 5, "line_no": 5, "list": 0, "liter": [0, 1, 5], "ll": 1, "lltabl": [1, 3], "longest": 2, "lt": [1, 5], "lte": [1, 5], "mai": 3, "maner": 0, "match": 2, "math": 2, "mathcal": 3, "meth": 3, "minu": [1, 5], "modul": 3, "more": [2, 3], "multipl": 0, "multipli": [1, 5], "name": 4, "need": 3, "newlin": [1, 5], "next": [2, 3], "non": 3, "none": [2, 3], "nontermin": [0, 1, 3, 4], "nonternin": 3, "notequ": [1, 5], "nullabl": [0, 3], "number": 5, "oper": 0, "paramet": [0, 2, 3, 5], "pars": [2, 3], "parser": 3, "part": 2, "pattern": 5, "plu": [1, 5], "predict": 3, "process": 3, "produc": 2, "product": [0, 1, 3], "provid": 3, "py": 3, "questionmark": [1, 5], "regex": 5, "remain": 2, "rememb": 2, "replac": 0, "repres": 5, "respect": 2, "respons": 2, "restructuredtext": 1, "return": [0, 2, 3], "rh": [0, 3], "right": 0, "rightarrow": 3, "rightbracket": [1, 5], "rightcurli": [1, 5], "rule": [0, 2, 3], "see": 1, "select": 3, "semicolon": [1, 5], "seri": 3, "set": [0, 3], "side": 0, "singl": [0, 3], "sourc": [2, 5], "space": [1, 5], "special": 5, "specif": 5, "specifi": 0, "split": 2, "stack": 3, "state": 3, "step": 3, "store": 5, "str": 2, "stream": 2, "string": [1, 5], "subclass": 0, "sucessfuli": 2, "symbol": 1, "syntax": 1, "t": 3, "tabl": 1, "termin": [0, 1, 3, 4, 5], "thei": 3, "thi": 3, "token": [0, 1, 2, 3], "top": 3, "tri": 2, "true": 0, "type": [0, 2, 3], "union": 0, "until": [2, 3], "up": 2, "us": [1, 2, 3], "valid": 3, "valu": 5, "variabl": [1, 5], "wa": [2, 5], "we": 0, "when": [0, 2, 3], "where": [3, 5], "which": [0, 2], "who": 3, "whole": 3, "your": 1, "zero": 3}, "titles": ["Grammar", "LUMEX documentation", "Lexer", "LL Table", "Symbol", "Tokens"], "titleterms": {"content": 1, "document": 1, "grammar": 0, "lexer": 2, "ll": 3, "lumex": 1, "symbol": 4, "tabl": 3, "token": 5}})