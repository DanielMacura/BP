INFO:__main__:START LUMEX
INFO:lex:Initialized Lexer
DEBUG:lex:Matched addfdtd
DEBUG:lex:So far longest match is addfdtd
DEBUG:lex:Matched addfdtd
INFO:lex:Advanced lexer with token AddFDTD matching addfdtd
INFO:parse:Initialized Parser
INFO:parse:START parsing
DEBUG:parse:Current iteration, top root, input token AddFDTD
DEBUG:parse:Queue []
DEBUG:parse:valueStack [<ast.Module object at 0x7b6dda2e8350>]


DEBUG:parse:Pushing [NonTerminal(name='body'), StoreToBody(name=''), CreateSelector(name=''), StoreToBody(name=''), Imports(name='')]
DEBUG:parse:Current iteration, top Imports(name=''), input token AddFDTD
DEBUG:parse:Queue [NonTerminal(name='body'), StoreToBody(name=''), CreateSelector(name=''), StoreToBody(name='')]
DEBUG:parse:valueStack [<ast.Module object at 0x7b6dda2e8350>]


DEBUG:parse:Applying action Imports
DEBUG:parse:Current iteration, top StoreToBody(name=''), input token AddFDTD
DEBUG:parse:Queue [NonTerminal(name='body'), StoreToBody(name=''), CreateSelector(name='')]
DEBUG:parse:valueStack [<ast.Module object at 0x7b6dda2e8350>, <ast.ImportFrom object at 0x7b6dda11f250>]


DEBUG:parse:Applying action StoreToBody
DEBUG:parse:Current iteration, top CreateSelector(name=''), input token AddFDTD
DEBUG:parse:Queue [NonTerminal(name='body'), StoreToBody(name='')]
DEBUG:parse:valueStack [<ast.Module object at 0x7b6dda2e8350>]


DEBUG:parse:Applying action CreateSelector
DEBUG:parse:Current iteration, top StoreToBody(name=''), input token AddFDTD
DEBUG:parse:Queue [NonTerminal(name='body')]
DEBUG:parse:valueStack [<ast.Module object at 0x7b6dda2e8350>, <ast.Assign object at 0x7b6dda2d7590>]


DEBUG:parse:Applying action StoreToBody
DEBUG:parse:Current iteration, top body, input token AddFDTD
DEBUG:parse:Queue []
DEBUG:parse:valueStack [<ast.Module object at 0x7b6dda2e8350>]


DEBUG:parse:Pushing [NonTerminal(name='body'), StoreToBody(name=''), NonTerminal(name='statement')]
DEBUG:parse:Current iteration, top statement, input token AddFDTD
DEBUG:parse:Queue [NonTerminal(name='body'), StoreToBody(name='')]
DEBUG:parse:valueStack [<ast.Module object at 0x7b6dda2e8350>]


DEBUG:parse:Pushing [Semicolon(), AddFDTD(name=''), AddFDTD()]
DEBUG:parse:Current iteration, top AddFDTD, input token AddFDTD
DEBUG:parse:Queue [NonTerminal(name='body'), StoreToBody(name=''), Semicolon(), AddFDTD(name='')]
DEBUG:parse:valueStack [<ast.Module object at 0x7b6dda2e8350>]


DEBUG:lex:Matched ;
DEBUG:lex:So far longest match is ;
INFO:lex:Advanced lexer with token Semicolon matching ;
DEBUG:parse:Current iteration, top AddFDTD(name=''), input token Semicolon
DEBUG:parse:Queue [NonTerminal(name='body'), StoreToBody(name=''), Semicolon()]
DEBUG:parse:valueStack [<ast.Module object at 0x7b6dda2e8350>]


DEBUG:parse:Applying action AddFDTD
DEBUG:parse:Current iteration, top Semicolon, input token Semicolon
DEBUG:parse:Queue [NonTerminal(name='body'), StoreToBody(name='')]
DEBUG:parse:valueStack [<ast.Module object at 0x7b6dda2e8350>, <ast.Expr object at 0x7b6dda11e790>]


DEBUG:lex:Matched 

DEBUG:lex:So far longest match is 

INFO:lex:Advanced lexer with token NewLine matching 

DEBUG:lex:Matched addplane
DEBUG:lex:So far longest match is addplane
DEBUG:lex:Matched addplane
INFO:lex:Advanced lexer with token AddPlane matching addplane
DEBUG:parse:Current iteration, top StoreToBody(name=''), input token AddPlane
DEBUG:parse:Queue [NonTerminal(name='body')]
DEBUG:parse:valueStack [<ast.Module object at 0x7b6dda2e8350>, <ast.Expr object at 0x7b6dda11e790>]


DEBUG:parse:Applying action StoreToBody
DEBUG:parse:Current iteration, top body, input token AddPlane
DEBUG:parse:Queue []
DEBUG:parse:valueStack [<ast.Module object at 0x7b6dda2e8350>]


DEBUG:parse:Pushing [NonTerminal(name='body'), StoreToBody(name=''), NonTerminal(name='statement')]
DEBUG:parse:Current iteration, top statement, input token AddPlane
DEBUG:parse:Queue [NonTerminal(name='body'), StoreToBody(name='')]
DEBUG:parse:valueStack [<ast.Module object at 0x7b6dda2e8350>]


DEBUG:parse:Pushing [Semicolon(), AddPlaneSource(name=''), AddPlane()]
DEBUG:parse:Current iteration, top AddPlane, input token AddPlane
DEBUG:parse:Queue [NonTerminal(name='body'), StoreToBody(name=''), Semicolon(), AddPlaneSource(name='')]
DEBUG:parse:valueStack [<ast.Module object at 0x7b6dda2e8350>]


DEBUG:lex:Matched ;
DEBUG:lex:So far longest match is ;
INFO:lex:Advanced lexer with token Semicolon matching ;
DEBUG:parse:Current iteration, top AddPlaneSource(name=''), input token Semicolon
DEBUG:parse:Queue [NonTerminal(name='body'), StoreToBody(name=''), Semicolon()]
DEBUG:parse:valueStack [<ast.Module object at 0x7b6dda2e8350>]


DEBUG:parse:Applying action AddPlaneSource
DEBUG:parse:Current iteration, top Semicolon, input token Semicolon
DEBUG:parse:Queue [NonTerminal(name='body'), StoreToBody(name='')]
DEBUG:parse:valueStack [<ast.Module object at 0x7b6dda2e8350>, <ast.Expr object at 0x7b6dda13c9d0>]


DEBUG:lex:Matched 
DEBUG:lex:So far longest match is 
INFO:lex:Advanced lexer with token EndOfFile matching 
DEBUG:parse:Current iteration, top StoreToBody(name=''), input token EndOfFile
DEBUG:parse:Queue [NonTerminal(name='body')]
DEBUG:parse:valueStack [<ast.Module object at 0x7b6dda2e8350>, <ast.Expr object at 0x7b6dda13c9d0>]


DEBUG:parse:Applying action StoreToBody
DEBUG:parse:Current iteration, top body, input token EndOfFile
DEBUG:parse:Queue []
DEBUG:parse:valueStack [<ast.Module object at 0x7b6dda2e8350>]


DEBUG:parse:Pushing [EndOfFile()]
DEBUG:parse:Current iteration, top EndOfFile, input token EndOfFile
DEBUG:parse:Queue []
DEBUG:parse:valueStack [<ast.Module object at 0x7b6dda2e8350>]


INFO:__main__:Python AST dump
Module(
    body=[
        Import(
            names=[
                alias(name='meep', asname='mp')]),
        ImportFrom(
            module='runtime',
            names=[
                alias(name='Selector'),
                alias(name='Record')],
            level=0),
        Assign(
            targets=[
                Name(id='selector', ctx=Store())],
            value=Call(
                func=Name(id='Selector', ctx=Load()))),
        Expr(
            value=Call(
                func=Attribute(
                    value=Name(id='selector', ctx=Load()),
                    attr='add',
                    ctx=Load()),
                args=[
                    Call(
                        func=Name(id='Record', ctx=Load()),
                        args=[
                            Constant(value='Simulation'),
                            Call(
                                func=Attribute(
                                    value=Name(id='mp', ctx=Load()),
                                    attr='Simulation',
                                    ctx=Load()),
                                keywords=[
                                    keyword(
                                        arg='cell_size',
                                        value=Call(
                                            func=Attribute(
                                                value=Name(id='mp', ctx=Load()),
                                                attr='Vector3',
                                                ctx=Load()),
                                            args=[
                                                Constant(value=1),
                                                Constant(value=1),
                                                Constant(value=1)]))]),
                            Constant(value=True)])])),
        Expr(
            value=Call(
                func=Attribute(
                    value=Name(id='selector', ctx=Load()),
                    attr='add',
                    ctx=Load()),
                args=[
                    Call(
                        func=Name(id='Record', ctx=Load()),
                        args=[
                            Constant(value='PlaneSource'),
                            Call(
                                func=Attribute(
                                    value=Name(id='mp', ctx=Load()),
                                    attr='Source',
                                    ctx=Load()),
                                keywords=[
                                    keyword(
                                        arg='src',
                                        value=Call(
                                            func=Attribute(
                                                value=Name(id='mp', ctx=Load()),
                                                attr='ContinuousSource',
                                                ctx=Load()),
                                            keywords=[
                                                keyword(
                                                    arg='frequency',
                                                    value=BinOp(
                                                        left=Constant(value=1.0),
                                                        op=Div(),
                                                        right=Constant(value=5e-07)))])),
                                    keyword(
                                        arg='component',
                                        value=Attribute(
                                            value=Name(id='mp', ctx=Load()),
                                            attr='Ex',
                                            ctx=Load())),
                                    keyword(
                                        arg='center',
                                        value=Call(
                                            func=Attribute(
                                                value=Name(id='mp', ctx=Load()),
                                                attr='Vector3',
                                                ctx=Load()),
                                            args=[
                                                Constant(value=0),
                                                Constant(value=0),
                                                Constant(value=3e-06)])),
                                    keyword(
                                        arg='size',
                                        value=Call(
                                            func=Attribute(
                                                value=Name(id='mp', ctx=Load()),
                                                attr='Vector3',
                                                ctx=Load()),
                                            args=[
                                                Constant(value=2e-06),
                                                Constant(value=5e-06),
                                                Constant(value=0)])),
                                    keyword(
                                        arg='direction',
                                        value=Call(
                                            func=Attribute(
                                                value=Name(id='mp', ctx=Load()),
                                                attr='Vector3',
                                                ctx=Load()),
                                            args=[
                                                Constant(value=0),
                                                Constant(value=0),
                                                Constant(value=-1)]))]),
                            Constant(value=True)])]))])

INFO:__main__:Lumerical source
addfdtd;
addplane;

INFO:__main__:Transpiled Python
import meep as mp
from runtime import Selector, Record
selector = Selector()
selector.add(Record('Simulation', mp.Simulation(cell_size=mp.Vector3(1, 1, 1)), True))
selector.add(Record('PlaneSource', mp.Source(src=mp.ContinuousSource(frequency=1.0 / 5e-07), component=mp.Ex, center=mp.Vector3(0, 0, 3e-06), size=mp.Vector3(2e-06, 5e-06, 0), direction=mp.Vector3(0, 0, -1)), True))

INFO:__main__:SUCCESS LUMEX
